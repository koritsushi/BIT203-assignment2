package assignment2;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.BorderLayout;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.SpringLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.awt.event.ActionEvent;

public class BoatStorageGUI extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	private static BoatStorage bs;
	
	private RegisterOwnerGUI Rgo;
	private JFileChooser jfc;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					BoatStorageGUI frame = new BoatStorageGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	public static BoatStorage getBS()
	{
		return bs;
	}
	/**
	 * Create the frame.
	 */
	public BoatStorageGUI() {
		setTitle("BoatStorage Management B2000511");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		jfc = new JFileChooser();
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmOpen = new JMenuItem("Open");
		mntmOpen.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int returnvalue = jfc.showOpenDialog(BoatStorageGUI.this);
				if (returnvalue == JFileChooser.APPROVE_OPTION)
				{
					File file = jfc.getSelectedFile();
					
					try 
					(
						FileInputStream fis = new FileInputStream(file);
						ObjectInputStream ois = new ObjectInputStream(fis);
							
						FileReader fr = new FileReader(file + ".txt");
						BufferedReader br = new BufferedReader(fr);
					)
					{
						int autoID = Integer.parseInt(br.readLine());
						Owner.setAutoGeneratedId(autoID);
						bs = (BoatStorage) ois.readObject();
					}
					catch (Exception exp)
					{
						exp.printStackTrace();
						JOptionPane.showMessageDialog(BoatStorageGUI.this, 
								"Error in reading...");
					}
				}
				else
				{
					JOptionPane.showMessageDialog(BoatStorageGUI.this,
							"No file Selected... Aborted!");
				}
			}
		});
		mnFile.add(mntmOpen);
		
		JMenuItem mntmSave = new JMenuItem("Save");
		mntmSave.addActionListener(new ActionListener() 
		{
			public void actionPerformed(ActionEvent e)
			{
				int returnValue = jfc.showSaveDialog(BoatStorageGUI.this);
				if (returnValue == JFileChooser.APPROVE_OPTION) {
					File file = jfc.getSelectedFile();
					try (
						FileOutputStream fis = new FileOutputStream(file);
						ObjectOutputStream ois = new ObjectOutputStream(fis);
						
						FileWriter fw = new FileWriter(file + ".txt");
						PrintWriter pw = new PrintWriter(fw);) {
						
						pw.println(Owner.getAutoGeneratedId());
						ois.writeObject(bs);
						
					} catch (Exception exp) {
						exp.printStackTrace();
						JOptionPane.showMessageDialog(BoatStorageGUI.this, 
							"Error in saving...");
					}
				}
			}
		});
		mnFile.add(mntmSave);
		
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(1, 0, 0, 0));
		
		JPanel panel = new JPanel();
		contentPane.add(panel);
		SpringLayout sl_panel = new SpringLayout();
		panel.setLayout(sl_panel);
		
		JLabel lblTitle = new JLabel("BoatStorage Management");
		sl_panel.putConstraint(SpringLayout.NORTH, lblTitle, 10, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, lblTitle, -144, SpringLayout.EAST, panel);
		panel.add(lblTitle);
		
		JButton btnRegisterOwner = new JButton("Register Owner");
		btnRegisterOwner.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					RegisterOwnerGUI Rgo = new RegisterOwnerGUI();
					Rgo.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					Rgo.setVisible(true);
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			}
		});
		panel.add(btnRegisterOwner);
		
		JButton btnRegisterBoat = new JButton("Register Boat");
		btnRegisterBoat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		sl_panel.putConstraint(SpringLayout.NORTH, btnRegisterBoat, 79, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.WEST, btnRegisterOwner, 0, SpringLayout.WEST, btnRegisterBoat);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnRegisterOwner, -6, SpringLayout.NORTH, btnRegisterBoat);
		panel.add(btnRegisterBoat);
		
		JButton btnDisplayBoatCount = new JButton("Display Total Boat Count");
		btnDisplayBoatCount.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		sl_panel.putConstraint(SpringLayout.WEST, btnRegisterBoat, 0, SpringLayout.WEST, btnDisplayBoatCount);
		sl_panel.putConstraint(SpringLayout.EAST, btnDisplayBoatCount, -133, SpringLayout.EAST, panel);
		panel.add(btnDisplayBoatCount);
		
		JButton btnDisplayAllOwner = new JButton("Display All Owner");
		btnDisplayAllOwner.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayAllOwner, -69, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayBoatCount, -6, SpringLayout.NORTH, btnDisplayAllOwner);
		sl_panel.putConstraint(SpringLayout.WEST, btnDisplayAllOwner, 0, SpringLayout.WEST, btnRegisterOwner);
		panel.add(btnDisplayAllOwner);
		
		JButton btnExit = new JButton("Exit");
		btnExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		sl_panel.putConstraint(SpringLayout.NORTH, btnExit, 16, SpringLayout.SOUTH, btnDisplayAllOwner);
		sl_panel.putConstraint(SpringLayout.EAST, btnExit, 0, SpringLayout.EAST, btnRegisterBoat);
		panel.add(btnExit);
		
	}
}
