package assignment2;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import java.awt.BorderLayout;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.SpringLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.awt.event.ActionEvent;

/**
 * @author Mah_LiYuan_B2000511
 * BoatStorageGUI class
 */
public class BoatStorageGUI extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	private static BoatStorage bs;
	
	private RegisterOwnerGUI Rgo;
	private JFileChooser jfc;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					BoatStorageGUI frame = new BoatStorageGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	public static BoatStorage getBS()
	{
		return bs;
	}
	/**
	 * Create the frame.
	 */
	public BoatStorageGUI() {
		setTitle("BoatStorage Management B2000511");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 500);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		jfc = new JFileChooser();
		bs = new BoatStorage();
		
		JMenuItem mntmOpen = new JMenuItem("Open");
		mntmOpen.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int returnvalue = jfc.showOpenDialog(BoatStorageGUI.this);
				if (returnvalue == JFileChooser.APPROVE_OPTION)
				{
					File file = jfc.getSelectedFile();
					
					try 
					(
						FileInputStream fis = new FileInputStream(file);
						ObjectInputStream ois = new ObjectInputStream(fis);
							
						FileReader fr = new FileReader(file + ".txt");
						BufferedReader br = new BufferedReader(fr);
					)
					{
						int ownerAutoID = Integer.parseInt(br.readLine());
						Owner.setAutoGeneratedId(ownerAutoID);
						int boatAutoID = Integer.parseInt(br.readLine());
						Boat.setAutoGeneratedId(boatAutoID);
						bs = (BoatStorage) ois.readObject();
					}
					catch (Exception exp)
					{
						exp.printStackTrace();
						JOptionPane.showMessageDialog(BoatStorageGUI.this, 
								"Error in reading...");
					}
				}
				else
				{
					JOptionPane.showMessageDialog(BoatStorageGUI.this,
							"No file Selected... Aborted!");
				}
			}
		});
		mnFile.add(mntmOpen);
		
		JMenuItem mntmSave = new JMenuItem("Save");
		mntmSave.addActionListener(new ActionListener() 
		{
			public void actionPerformed(ActionEvent e)
			{
				if (bs.getOwners().size() == 0)
				{
					JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Owner has been registered yet!");
					return ;
				}
				int returnValue = jfc.showSaveDialog(BoatStorageGUI.this);
				if (returnValue == JFileChooser.APPROVE_OPTION) {
					File file = jfc.getSelectedFile();
					try 
					(
						FileOutputStream fis = new FileOutputStream(file);
						ObjectOutputStream ois = new ObjectOutputStream(fis);
						
						FileWriter fw = new FileWriter(file + ".txt");
						PrintWriter pw = new PrintWriter(fw);
					) 
					{
						
						pw.println(Owner.getAutoGeneratedId());
						pw.println(Boat.getAutoGeneratedId());
						ois.writeObject(bs);
						
					} catch (Exception exp) {
						exp.printStackTrace();
						JOptionPane.showMessageDialog(BoatStorageGUI.this, 
							"Error in saving...");
					}
				}
			}
		});
		mnFile.add(mntmSave);
		
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(1, 0, 0, 0));
		
		JPanel panel = new JPanel();
		contentPane.add(panel);
		SpringLayout sl_panel = new SpringLayout();
		panel.setLayout(sl_panel);
		
		JLabel lblTitle = new JLabel("BoatStorage Management");
		sl_panel.putConstraint(SpringLayout.NORTH, lblTitle, 10, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, lblTitle, -144, SpringLayout.EAST, panel);
		panel.add(lblTitle);
		
		JButton btnRegisterOwner = new JButton("Register Owner");
		sl_panel.putConstraint(SpringLayout.NORTH, btnRegisterOwner, 16, SpringLayout.SOUTH, lblTitle);
		sl_panel.putConstraint(SpringLayout.WEST, btnRegisterOwner, 80, SpringLayout.WEST, panel);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnRegisterOwner, -360, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnRegisterOwner, -90, SpringLayout.EAST, panel);
		btnRegisterOwner.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					RegisterOwnerGUI Rgo = new RegisterOwnerGUI();
					Rgo.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					Rgo.setVisible(true);
					
				} catch (Exception roex) {
					roex.printStackTrace();
				}
			}
		});
		panel.add(btnRegisterOwner);
		
		JButton btnRegisterBoat = new JButton("Register Boat");
		sl_panel.putConstraint(SpringLayout.NORTH, btnRegisterBoat, 6, SpringLayout.SOUTH, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.WEST, btnRegisterBoat, 80, SpringLayout.WEST, panel);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnRegisterBoat, -325, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnRegisterBoat, -90, SpringLayout.EAST, panel);
		btnRegisterBoat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (bs.getOwners().size() == 0)
				{
					JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Owner has been registered yet!");
					return ;
				}
				try {
					RegisterBoatGUI RB = new RegisterBoatGUI();
					RB.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					RB.init();
					RB.setVisible(true);
				} catch (Exception rgex) {
					rgex.printStackTrace();
				}
			}
		});
		panel.add(btnRegisterBoat);
		
		JButton btnDisplayBoatCount = new JButton("Display Total Boat Count");
		sl_panel.putConstraint(SpringLayout.WEST, btnDisplayBoatCount, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.EAST, btnDisplayBoatCount, -90, SpringLayout.EAST, panel);
		btnDisplayBoatCount.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(BoatStorageGUI.this, "Total Boat Count:" + bs.getBoats().size() +
						"\n SailBoat:" + bs.getTotalSailBoats() + "\n Motorboat:" + bs.getTotalMotorBoat());
			}
		});
		panel.add(btnDisplayBoatCount);
		
		JButton btnDisplayAllOwner = new JButton("Display All Owner Details");
		sl_panel.putConstraint(SpringLayout.NORTH, btnDisplayAllOwner, 214, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayBoatCount, -6, SpringLayout.NORTH, btnDisplayAllOwner);
		sl_panel.putConstraint(SpringLayout.WEST, btnDisplayAllOwner, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.EAST, btnDisplayAllOwner, 0, SpringLayout.EAST, btnRegisterOwner);
		btnDisplayAllOwner.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (bs.getOwners().size() == 0)
					{
						JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Owner has been registered yet!");
						return ;
					}
					DisplayOwnersGUI DO = new DisplayOwnersGUI();
					DO.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					DO.setVisible(true);
				} catch (Exception doex) {
					doex.printStackTrace();
				}
			}
		});
		panel.add(btnDisplayAllOwner);
		
		JButton btnExit = new JButton("Exit");
		sl_panel.putConstraint(SpringLayout.NORTH, btnExit, 390, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.WEST, btnExit, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnExit, -10, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnExit, 0, SpringLayout.EAST, btnRegisterOwner);
		btnExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		panel.add(btnExit);
		
		JButton btnDisplayOwnerTotalMonthly = new JButton("Display Owner Total Monthly Charge");
		sl_panel.putConstraint(SpringLayout.WEST, btnDisplayOwnerTotalMonthly, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayOwnerTotalMonthly, -116, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnDisplayOwnerTotalMonthly, 0, SpringLayout.EAST, btnRegisterOwner);
		btnDisplayOwnerTotalMonthly.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (bs.getOwners().size() == 0)
				{
					JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Owner has been registered yet!");
					return ;
				}
				try {
					CheckOwnerGUI co = new CheckOwnerGUI();
					co.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					co.setVisible(true);
				} catch (Exception coex) {
					coex.printStackTrace();
				}
			}
		});
		panel.add(btnDisplayOwnerTotalMonthly);
		
		JButton btnTotalMonthlyCharge = new JButton("Display Monthly Revenue");
		sl_panel.putConstraint(SpringLayout.NORTH, btnTotalMonthlyCharge, 6, SpringLayout.SOUTH, btnDisplayOwnerTotalMonthly);
		sl_panel.putConstraint(SpringLayout.WEST, btnTotalMonthlyCharge, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnTotalMonthlyCharge, -81, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnTotalMonthlyCharge, 0, SpringLayout.EAST, btnRegisterOwner);
		btnTotalMonthlyCharge.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(BoatStorageGUI.this, "BoatStorage Total Monthly Revenue:\nRM" + bs.getTotalCharges());
			}
		});
		panel.add(btnTotalMonthlyCharge);
		
		JButton btnDisplayBoat = new JButton("Display All Boat Details");
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayAllOwner, -6, SpringLayout.NORTH, btnDisplayBoat);
		sl_panel.putConstraint(SpringLayout.NORTH, btnDisplayBoat, 249, SpringLayout.NORTH, panel);
		sl_panel.putConstraint(SpringLayout.WEST, btnDisplayBoat, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnDisplayBoat, -151, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnDisplayBoat, 0, SpringLayout.EAST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.NORTH, btnDisplayOwnerTotalMonthly, 6, SpringLayout.SOUTH, btnDisplayBoat);
		btnDisplayBoat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (bs.getBoats().size() == 0)
					{
						JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Boats has been registered yet!");
						return ;
					}
					DisplayBoatsGUI db = new DisplayBoatsGUI();
					db.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					db.setVisible(true);
				} catch (Exception dbex) {
					dbex.printStackTrace();
				}
			}
		});
		panel.add(btnDisplayBoat);
		
		JButton btnNewButton = new JButton("Update Owner Details");
		sl_panel.putConstraint(SpringLayout.NORTH, btnDisplayBoatCount, 40, SpringLayout.SOUTH, btnNewButton);
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (bs.getOwners().size() == 0)
					{
						JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Owners has been registered yet!");
						return ;
					}	
					UpdateOwnerGUI uod = new UpdateOwnerGUI();
					uod.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					uod.init();
					uod.setVisible(true);
				} catch (Exception uodex) {
					uodex.printStackTrace();
				}
			}
		});
		sl_panel.putConstraint(SpringLayout.SOUTH, btnNewButton, -290, SpringLayout.SOUTH, panel);
		sl_panel.putConstraint(SpringLayout.NORTH, btnNewButton, 6, SpringLayout.SOUTH, btnRegisterBoat);
		sl_panel.putConstraint(SpringLayout.WEST, btnNewButton, 80, SpringLayout.WEST, panel);
		sl_panel.putConstraint(SpringLayout.EAST, btnNewButton, 0, SpringLayout.EAST, btnRegisterOwner);
		panel.add(btnNewButton);
		
		JButton btnUpdateBoat = new JButton("Update Boat Details");
		btnUpdateBoat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (bs.getBoats().size() == 0)
					{
						JOptionPane.showMessageDialog(BoatStorageGUI.this, "No Boats has been registered yet!");
						return ;
					}		
					UpdateBoatGUI ubg = new UpdateBoatGUI();
					ubg.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
					ubg.init();
					ubg.setVisible(true);
				} catch (Exception ubgex) {
					ubgex.printStackTrace();
				}
			}
		});
		sl_panel.putConstraint(SpringLayout.NORTH, btnUpdateBoat, 6, SpringLayout.SOUTH, btnNewButton);
		sl_panel.putConstraint(SpringLayout.WEST, btnUpdateBoat, 0, SpringLayout.WEST, btnRegisterOwner);
		sl_panel.putConstraint(SpringLayout.SOUTH, btnUpdateBoat, -5, SpringLayout.NORTH, btnDisplayBoatCount);
		sl_panel.putConstraint(SpringLayout.EAST, btnUpdateBoat, 0, SpringLayout.EAST, btnRegisterOwner);
		panel.add(btnUpdateBoat);
		
	}
}
